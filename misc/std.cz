pub module prelude {
    pub use package::bool;
    pub use package::char;
    pub use package::i8;
    pub use package::u8;
    pub use package::i16;
    pub use package::u16;
    pub use package::i32;
    pub use package::u32;
    pub use package::i64;
    pub use package::u64;
    pub use package::i128;
    pub use package::u128;
    pub use package::isize;
    pub use package::usize;
    pub use package::f32;
    pub use package::f64;
    pub use package::string::String;

    // FIXME these are temporary, for testing
    pub unsafe fn print_bool(_ v: bool);
    pub unsafe fn print_char(_ v: char);
    pub unsafe fn print_char_hex(_ v: char);
    pub unsafe fn print_i8(_ v: i8);
    pub unsafe fn print_u8(_ v: u8);
    pub unsafe fn print_i16(_ v: i16);
    pub unsafe fn print_u16(_ v: u16);
    pub unsafe fn print_i32(_ v: i32);
    pub unsafe fn print_u32(_ v: u32);
    pub unsafe fn print_i64(_ v: i64);
    pub unsafe fn print_u64(_ v: u64);
    pub unsafe fn print_i128(_ v: i128);
    pub unsafe fn print_u128(_ v: u128);
    pub unsafe fn print_isize(_ v: isize);
    pub unsafe fn print_usize(_ v: usize);
    pub unsafe fn print_f32(_ v: f32);
    pub unsafe fn print_f64(_ v: f64);
    pub unsafe fn println();
    pub unsafe fn print_sep();
    pub unsafe fn prints(_ s: String);
}

pub struct f32 {{}}
pub struct f64 {{}}
pub struct i8 {{}}
pub struct u8 {{}}
pub struct i16 {{}}
pub struct u16 {{}}
pub struct i32 {{}}
pub struct u32 {{}}
pub struct i64 {{}}
pub struct u64 {{}}
pub struct i128 {{}}
pub struct u128 {{}}
pub struct isize {{}}
pub struct usize {{}}
pub struct bool {{}}
pub struct char {{}}

pub module string {
    pub /*FIXME ref */struct String {
        ptr: usize,
        len: usize,
    }

    impl String {
        pub fn len(self) -> usize {
            self.len
        }
    }
}

// Placeholder for HIR node.
struct Unit {}
