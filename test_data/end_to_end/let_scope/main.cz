fn f1() {
    let v = "outer1";
    prints(v); println();
    {
        prints(v); println();
        let v = "inner1";
        prints(v); println();
        let v = "inner2";
        prints(v); println();
        let v = "inner3";
        prints(v); println();
    }
    prints(v); println();
    let v = "outer2";
    prints(v); println();
}

fn f2() {
    let x: Struct = Struct { x: "first" };
    let x: Struct = Struct { x: "second" };
    prints(x.x); println();

    struct Struct { x: String }
}

fn f3() {
    let x: Struct = Struct { x: "first" };
    let x: Struct = Struct { x: "second" };
    prints(x.x); println();

    module m {
        struct Struct { x: String }
    }
    use m::Struct;
}

fn f4() {
    let x: Struct = Struct { x: "first" };
    let x: Struct = Struct { x: "second" };
    prints(x.x); println();

    module m {
        struct Struct { x: String }
    }
    use m::*;
}

fn f5() {
    f();
    let x = {};
    fn f() {
        prints("f"); println();
    }
}

fn f6() {
    let s = 42;
    let s = s;
    print_i32(s); println();
}

fn main() {
    f1();

    println();
    f2();

    println();
    f3();

    println();
    f4();

    println();
    f5();

    println();
    f6();
}
